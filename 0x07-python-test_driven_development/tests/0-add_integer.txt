#importing module
>>> add_integer = __import__('0-add_integer').add_integer

#Test with two integers
>>> add_integer(10, 20)
30

#Test with an integer and a float
>>> add_integer(10, 20.5)
30

#Test with two float, expect rounding down
>>> add_integer(1.9, 2.1)
3

#Test with invalid type for a, should raise TypeError
>>> add_integer("100", 100)
Traceback (most recent call last):
    ...
TypeError: a must be an integer

#Test with invalid type for b, should raise TypeError
>>> add_integer(100, "100")
Traceback (most recent call last):
    ...
TypeError: b must be an integer

#Testing float overflow
>>> add_integer(float('inf'))
Traceback (most recent call last):
...
OverflowError: cannot convert float infinity to integer

>>> add_integer(2, float('inf'))
Traceback (most recent call last):
    ...
OverflowError: cannot convert float infinity to integer

#Scenario where a NaN is passed i.e Not a Number is passed

>>> add_integer(float('nan'))
Traceback (most recent call last):
    ...
ValueError: cannot convert float NaN to integer

>>> add_integer(2, float('nan'))
Traceback (most recent call last):
    ...
ValueError: cannot convert float NaN to integer

#if two argument is missing
>>> add_integer()
Traceback (most recent call last):
    ...
TypeError: add_integer() missing 1 required positional argument: 'a'

#if one argument is missing
>>> add_integer(5)
103
